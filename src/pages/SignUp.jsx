import { Box, Button, TextField, Typography } from "@mui/material";
import { useNavigate } from "react-router-dom";
import { BackgroundBox, ForegroundBox } from './../components/styled_comp/StyledDiv';
import { useForm } from "react-hook-form";
import { useState } from "react";

const SignUp = () => {
    const [step, setStep] = useState(1);
    const [joinData, setJoinData] = useState({
        email: "",
        password: "",
        pwdchk: "",
        name: "",
    });
    
    let stepComp;

    if (step === 1) {
        stepComp = (
            <Step title="Ïù¥Î©îÏùº ÏûÖÎ†•" inputData={[{"inputName":"email", "type":"email", "message":"Î®ºÏ†Ä, Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî üòä", "label":"Ïù¥Î©îÏùº" }]} step={step} setStep={setStep} joinData={joinData} setJoinData={setJoinData} />
        );    
    } else if (step === 2) {
        stepComp = (
            <>
                <Step title="ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•" 
                    inputData={[
                        {"inputName":"password", "type":"password", "message":"ÎπÑÎ∞ÄÎ≤àÌò∏Îäî 9Ïûê Ïù¥ÏÉÅ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.", "label":"ÎπÑÎ∞ÄÎ≤àÌò∏" },
                        {"inputName":"pwdchk", "type":"password", "message":"ÎπÑÎ∞ÄÎ≤àÌò∏Î•º Îã§Ïãú ÌïúÎ≤à ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.", "label":"ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏" },
                    ]}
                    step={step} setStep={setStep} joinData={joinData} setJoinData={setJoinData} />
            </>
        )
    } else if (step === 3) {
        stepComp = (
            <>
                <Step title="Í∞úÏù∏Ï†ïÎ≥¥ ÏûÖÎ†•" 
                inputData={[
                    {"inputName":"gender", "type":"radio", "message":"ÏÑ±Î≥ÑÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.", "label":"ÏÑ±Î≥Ñ" },
                    {"inputName":"birthday", "type":"date", "message":"ÏÉùÏùºÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.", "label":"ÏÉùÏùº" },
                    {"inputName":"height", "type":"number", "message":"ÌÇ§Î•º ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.", "label":"ÌÇ§" },
                    {"inputName":"weight", "type":"number", "message":"Î™∏Î¨¥Í≤åÎ•º ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.", "label":"Î™∏Î¨¥Í≤å" },
                ]}
                step={step} setStep={setStep} joinData={joinData} setJoinData={setJoinData} />
            </>
            
        )
    } else if (step === 4) {
        stepComp = (
            <>
                <Step title="ÎßûÏ∂§ Ï∂îÏ≤úÏ†ïÎ≥¥ ÏûÖÎ†•" 
                inputName="bodyshape" label="Ï≤¥Ìòï" 
                inputData={[
                    {"img": "../assets/MaleBodyShape.JPG", "inputName":"bodyshape", "type":"checkbox", "message":"ÎÇòÏóêÍ≤å Í∞ÄÏû• Ï†ÅÏ†àÌïú Ï≤¥ÌòïÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.", "label":"Ï≤¥Ìòï" },
                ]}
                step={step} setStep={setStep} joinData={joinData} setJoinData={setJoinData} />
            </>
        )
    } else {
        stepComp = (
            <>
                <Step title="ÌîÑÎ°úÌïÑ ÏÑ§Ï†ï"
                inputData={[
                    {"inputName":"img", "type":"", "message":"ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑÏùÑ Îì±Î°ùÌï¥ Ï£ºÏÑ∏Ïöî.", "label":"ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑ" },
                    {"inputName":"name", "type":"", "message":"Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.", "label":"Ïù¥Î¶Ñ" },
                ]}
                step={step} setStep={setStep} joinData={joinData} setJoinData={setJoinData} />
            </>
        );
    }

    return stepComp;
}

const Step = ({title, inputData, step, setStep, joinData, setJoinData}) => {
    const goNext = () => {
        setStep(step+1);
    }

    const goPrev = () => {
        setStep(step-1);
    }

    const goJoin = () => {
        console.log(joinData);
    }

    const addJoinData = (e) => {
        setJoinData({...joinData, [e.target.name]: e.target.value});
    }

    return ( 
        <Box
            width='80%'
            height='100vh'
            display='flex'
            flexDirection='column'
            justifyContent='center'
            alignItems='center'
        >
            <Typography variant="h5" fontWeight={800}>{title}</Typography>
            <BackgroundBox
                display='flex'
                
                style={{
                    width:'100%',
                    marginTop:'36px',
                    padding: '16px',
                    justifyContent: 'space-around'
                }}
            >
                <ForegroundBox
                    style={{
                        width:'100%',
                        margin:'24px 0',
                        padding: '16px'
                    }}
                >
                    {
                        inputData.map(i => (
                            <>
                                {i.type === 'radio' ? (
                                    <div
                                        key={i.inputName}
                                        style={{
                                            width: '100%',
                                            margin: '12px 0 24px',
                                        }}
                                        >
                                        <Typography>{i.message}</Typography>
                                        <label>
                                            <input
                                                type={i.type}
                                                name={i.inputName}
                                                value="M"
                                                checked={joinData[i.inputName] === "M"}
                                                onChange={(e) => addJoinData(e)}
                                            />
                                            ÎÇ®ÏÑ±
                                        </label>
                                        <label>
                                            <input
                                                type={i.type}
                                                name={i.inputName}
                                                value="F"
                                                checked={joinData[i.inputName] === "F"}
                                                onChange={(e) => addJoinData(e)}
                                            />
                                            Ïó¨ÏÑ±
                                        </label>
                                    </div>
                                ) : (
                                    <>
                                        <img src={i.img} />
                                        <Typography>{i.message}</Typography>
                                        <input
                                            name={i.inputName}
                                            type={i.type}
                                            label={`${i.label}`}
                                            onChange={(e) => addJoinData(e)}
                                            value={joinData[i.inputName]}
                                            style={{
                                                width: '100%',
                                                margin: '16px 0 24px',
                                                padding: '12px',
                                                border: '1px solid #b1e33d',
                                                borderRadius: '24px'
                                            }}
                                        />
                                    </>
                                )}
                            </>
                        ))
                    }
                </ForegroundBox>
                { step > 1 && <Button onClick={goPrev} variant="contained" color="white" style={{ padding: '6px 36px'}}>Ïù¥Ï†ÑÏúºÎ°ú</Button> }
                { step !== 5 ? <Button onClick={goNext} variant="contained" color="secondary" style={{ padding: '6px 36px'}}>Í≥ÑÏÜçÌïòÍ∏∞</Button>: <Button onClick={goJoin} variant="contained" color="secondary" style={{ padding: '6px 36px'}}>ÌöåÏõêÍ∞ÄÏûÖ</Button> }
            </BackgroundBox>
        </Box>
    );
}

export default SignUp;